"use strict";(self.webpackChunkaaaaaandy_github_io=self.webpackChunkaaaaaandy_github_io||[]).push([[93630],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):m(m({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),s=c(n),u=i,g=s["".concat(l,".").concat(u)]||s[u]||p[u]||o;return n?a.createElement(g,m(m({ref:t},d),{},{components:n})):a.createElement(g,m({ref:t},d))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,m=new Array(o);m[0]=u;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[s]="string"==typeof e?e:i,m[1]=r;for(var c=2;c<o;c++)m[c]=n[c];return a.createElement.apply(null,m)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},97841:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>m,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const o={sidebar_position:8},m=void 0,r={unversionedId:"git/git rebase",id:"git/git rebase",title:"git rebase",description:"1. \u6587\u6863",source:"@site/docs/git/git rebase.md",sourceDirName:"git",slug:"/git/git rebase",permalink:"/docs/git/git rebase",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"gitSidebar",previous:{title:"git merge",permalink:"/docs/git/git merge"},next:{title:"git tag",permalink:"/docs/git/git tag"}},l={},c=[{value:"1. \u6587\u6863",id:"1-\u6587\u6863",level:2},{value:"2. \u57fa\u7840\u547d\u4ee4",id:"2-\u57fa\u7840\u547d\u4ee4",level:2},{value:"2.1 \u591a\u4e2a<code>commit</code>\u5408\u5e76\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684<code>commit</code>",id:"21-\u591a\u4e2acommit\u5408\u5e76\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684commit",level:3},{value:"2.2 \u5408\u5e76\u5206\u652f\uff08\u53d8\u57fa\uff09",id:"22-\u5408\u5e76\u5206\u652f\u53d8\u57fa",level:3},{value:"2.3 \u5220\u9664\u6307\u5b9a<code>commit</code>",id:"23-\u5220\u9664\u6307\u5b9acommit",level:3},{value:"2.4 <code>--interactive &amp;&amp; -i</code>",id:"24---interactive---i",level:3}],d={toc:c},s="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(s,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"1-\u6587\u6863"},"1. \u6587\u6863"),(0,i.kt)("p",null,"\u57fa\u7840\u547d\u4ee4\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"git rebase")),(0,i.kt)("p",null,"\u5b98\u65b9\u6587\u6863\u5730\u5740\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://git-scm.com/docs/git-rebase"},"https://git-scm.com/docs/git-rebase")),(0,i.kt)("p",null,"\u529f\u80fd\uff1a\u53d8\u57fa\uff0c\u53ef\u4ee5\u5bf9\u67d0\u4e00\u6bb5\u7ebf\u6027\u63d0\u4ea4\u5386\u53f2\u8fdb\u884c\u7f16\u8f91\u3001\u5220\u9664\u3001\u590d\u5236\u3001\u7c98\u8d34\uff1b\u5408\u7406\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"rebase"),"\u53ef\u4ee5\u4f7f\u6211\u4eec\u7684\u63d0\u4ea4\u5386\u53f2\u5e72\u51c0\u3001\u7b80\u6d01\u3002"),(0,i.kt)("p",null,"\u63d0\u793a\uff1a\u4e0d\u8981\u901a\u8fc7",(0,i.kt)("inlineCode",{parentName:"p"},"rebase"),"\u5bf9\u4efb\u4f55\u5df2\u7ecf\u63d0\u4ea4\u5230\u516c\u5171\u4ed3\u5e93\u4e2d\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"commit"),"\u8fdb\u884c\u4fee\u6539\u3002"),(0,i.kt)("h2",{id:"2-\u57fa\u7840\u547d\u4ee4"},"2. \u57fa\u7840\u547d\u4ee4"),(0,i.kt)("h3",{id:"21-\u591a\u4e2acommit\u5408\u5e76\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684commit"},"2.1 \u591a\u4e2a",(0,i.kt)("inlineCode",{parentName:"h3"},"commit"),"\u5408\u5e76\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684",(0,i.kt)("inlineCode",{parentName:"h3"},"commit")),(0,i.kt)("p",null,"\u547d\u4ee4\u6a21\u5f0f\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"git rebase -i [startcommit] [endcommit]"),"\uff1a\u5176\u4e2d",(0,i.kt)("inlineCode",{parentName:"li"},"-i"),"\u4e3a\u6253\u5f00\u4ea4\u4e92\u9762\uff0c",(0,i.kt)("inlineCode",{parentName:"li"},"[startcommit]"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"[endcommit]"),"\u4e3a\u533a\u95f4\u9009\u62e9\uff0c\u5176\u4e2d",(0,i.kt)("inlineCode",{parentName:"li"},"[endcommit]"),"\u53ef\u4ee5\u7701\u7565\uff1b"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"git rebase -i HEAD~2"),"\uff1a\u5408\u5e76\u6700\u8fd1\u4e24\u4e2a",(0,i.kt)("inlineCode",{parentName:"li"},"commit"),"\u3002")),(0,i.kt)("p",null,"\u65e5\u5e38\u5f00\u53d1\u4e2d\uff0c\u4f1a\u5b58\u5728\u591a\u6b21",(0,i.kt)("inlineCode",{parentName:"p"},"commit"),"\u7684\u60c5\u51b5\uff0c\u4f46\u5e76\u4e0d\u662f\u6bcf\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"commit"),"\u90fd\u662f\u9700\u8981\u63a8\u9001\u5230\u8fdc\u7a0b\u4e3b\u673a\u4e2d\u7684\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"git rebase"),"\u547d\u4ee4\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06\u672c\u5730\u7684\u591a\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"commit"),"\u5408\u5e76\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"commit"),"\uff0c\u7b80\u5316\u6211\u4eec\u7684\u63d0\u4ea4\u8bb0\u5f55\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mermaid"},"graph LR  \n    A((A)) ---\x3e B((B))\n    B ---\x3e C((C))\n\n    A1((A)) ---\x3e B1((B'))\n")),(0,i.kt)("p",null,"\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5f53\u524d\u4ed3\u5e93\u4e2d\u5b58\u5728",(0,i.kt)("inlineCode",{parentName:"p"},"commit"),"\u8bb0\u5f55",(0,i.kt)("inlineCode",{parentName:"p"},"A\u3001B\u3001C"),"\uff0c\u7ecf\u8fc7",(0,i.kt)("inlineCode",{parentName:"p"},"git rebase"),"\u9700\u8981\u5c06",(0,i.kt)("inlineCode",{parentName:"p"},"B\u3001C"),"\u5408\u5e76\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"B'"),"\u3002"),(0,i.kt)("p",null,"\u4ee5\u4e0b\u9762\u4e3a\u4f8b\uff1a"),(0,i.kt)("p",null,"\u6211\u4eec\u5c06\u6700\u65b0\u4e24\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"commit"),"\u5408\u5e76\u4e3a\u4e00\u4e2a\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"~/workspace/github/git-study(master \u2714) git log --graph\n* commit f6744cf023142db918ebbf3c30ced50bf659a35a (HEAD -> master)\n| Author: AndyWang <wangyuanwenqi@outlook.com>\n| Date:   Tue Jun 8 10:33:41 2021 +0800\n|\n|     add aa to a.txt\n|\n* commit 442d8f838b9681fec3849c40f4a68d77011ba390\n| Author: AndyWang <wangyuanwenqi@outlook.com>\n| Date:   Tue Jun 8 10:33:25 2021 +0800\n|\n|     add a to a.txt\n|\n* commit d54458266ca9cc99b1f020122ade3486c6e158ab\n  Author: AndyWang <wangyuanwenqi@outlook.com>\n  Date:   Tue Jun 8 10:33:00 2021 +0800\n\n      init a\n")),(0,i.kt)("p",null,"\u5bf9\u5f53\u524d\u5206\u652f\u6267\u884c",(0,i.kt)("inlineCode",{parentName:"p"},"git rebase"),"\u547d\u4ee4\u5c06\u591a\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"commit"),"\u5408\u5e76\u4e3a\u4e00\u4e2a\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"~/workspace/github/git-study(master \u2714) git rebase -i HEAD~2\n.git\n  1 pick 442d8f8 add a to a.txt\n  2 pick f6744cf add aa to a.txt\n  3\n  4 # Rebase d544582..f6744cf onto d544582 (2 commands)\n  5 #\n  6 # Commands:\n  7 # p, pick <commit> = use commit\n  8 # r, reword <commit> = use commit, but edit the commit message\n  9 # e, edit <commit> = use commit, but stop for amending\n 10 # s, squash <commit> = use commit, but meld into previous commit\n 11 # f, fixup <commit> = like \"squash\", but discard this commit's log message\n 12 # x, exec <command> = run command (the rest of the line) using shell\n 13 # b, break = stop here (continue rebase later with 'git rebase --continue')\n 14 # d, drop <commit> = remove commit\n 15 # l, label <label> = label current HEAD with a name\n 16 # t, reset <label> = reset HEAD to a label\n 17 # m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]\n 18 # .       create a merge commit using the original merge commit's\n 19 # .       message (or the oneline, if no original merge commit was\n 20 # .       specified). Use -c <commit> to reword the commit message.\n 21 #\n 22 # These lines can be re-ordered; they are executed from top to bottom.\n 23 #\n 24 # If you remove a line here THAT COMMIT WILL BE LOST.\n 25 #\n 26 # However, if you remove everything, the rebase will be aborted.\n 27 #\n 28 # Note that empty commits are commented out\n")),(0,i.kt)("p",null,"\u4fee\u6539\u7b2c\u4e8c\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"pick"),"\u547d\u4ee4\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"squash"),"\u547d\u4ee4\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},".git\n  1 pick 442d8f8 add a to a.txt\n  2 squash f6744cf add aa to a.txt\n  3\n  4 # Rebase d544582..f6744cf onto d544582 (2 commands)\n  5 #\n  6 # Commands:\n  7 # p, pick <commit> = use commit\n  8 # r, reword <commit> = use commit, but edit the commit message\n  9 # e, edit <commit> = use commit, but stop for amending\n 10 # s, squash <commit> = use commit, but meld into previous commit\n 11 # f, fixup <commit> = like \"squash\", but discard this commit's log message\n 12 # x, exec <command> = run command (the rest of the line) using shell\n 13 # b, break = stop here (continue rebase later with 'git rebase --continue')\n 14 # d, drop <commit> = remove commit\n 15 # l, label <label> = label current HEAD with a name\n 16 # t, reset <label> = reset HEAD to a label\n 17 # m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]\n 18 # .       create a merge commit using the original merge commit's\n 19 # .       message (or the oneline, if no original merge commit was\n 20 # .       specified). Use -c <commit> to reword the commit message.\n 21 #\n 22 # These lines can be re-ordered; they are executed from top to bottom.\n 23 #\n 24 # If you remove a line here THAT COMMIT WILL BE LOST.\n 25 #\n 26 # However, if you remove everything, the rebase will be aborted.\n 27 #\n 28 # Note that empty commits are commented out\n")),(0,i.kt)("p",null,"\u6b64\u65f6\u4fdd\u5b58\u9000\u51fa\u4f1a\u91cd\u65b0\u6253\u5f00\u4e00\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"vim"),"\u7f16\u8f91\u5668\uff0c\u7528\u6765\u7f16\u8f91\u65b0",(0,i.kt)("inlineCode",{parentName:"p"},"commit"),"\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"message"),"\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"}," 1 # This is a combination of 2 commits.\n  2 # This is the 1st commit message:\n  3\n  4 add a to a.txt\n  5\n  6 # This is the commit message #2:\n  7\n  8 add aa to a.txt\n  9\n 10 # Please enter the commit message for your changes. Lines starting\n 11 # with '#' will be ignored, and an empty message aborts the commit.\n 12 #\n 13 # Date:      Tue Jun 8 10:33:25 2021 +0800\n 14 #\n 15 # interactive rebase in progress; onto d544582\n 16 # Last commands done (2 commands done):\n 17 #    pick 442d8f8 add a to a.txt\n 18 #    squash f6744cf add aa to a.txt\n 19 # No commands remaining.\n 20 # You are currently rebasing branch 'master' on 'd544582'.\n 21 #\n 22 # Changes to be committed:\n 23 #       modified:   a.txt\n 24 #\n")),(0,i.kt)("p",null,"\u6b64\u5904\u53ef\u4ee5\u7f16\u8f91\u4fe1\u606f\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4fdd\u5b58\u9000\u51fa\uff0c\u67e5\u770b\u5f53\u524d\u5386\u53f2\u8bb0\u5f55\uff0c\u53d1\u73b0\uff0c\u4e09\u4e2a\u8bb0\u5f55\u5df2\u7ecf\u53d8\u6210\u4e86\u4e24\u4e2a\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"~/workspace/github/git-study(master \u2714) git log --graph\n* commit 59198b5170b043ac8fe9d64731ed59bf7628f26f (HEAD -> master)\n| Author: AndyWang <wangyuanwenqi@outlook.com>\n| Date:   Tue Jun 8 10:33:25 2021 +0800\n|\n|     add a to a.txt\n|\n|     add aa to a.txt\n|\n* commit d54458266ca9cc99b1f020122ade3486c6e158ab\n  Author: AndyWang <wangyuanwenqi@outlook.com>\n  Date:   Tue Jun 8 10:33:00 2021 +0800\n\n      init a\n")),(0,i.kt)("h3",{id:"22-\u5408\u5e76\u5206\u652f\u53d8\u57fa"},"2.2 \u5408\u5e76\u5206\u652f\uff08\u53d8\u57fa\uff09"),(0,i.kt)("p",null,"\u6574\u4f53\u601d\u60f3\u4e3a\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u5207\u6362\u5230\u5bf9\u65b9\u5206\u652f\uff1a"),(0,i.kt)("li",{parentName:"ol"},"\u6267\u884c",(0,i.kt)("inlineCode",{parentName:"li"},"git rebase master"),";"),(0,i.kt)("li",{parentName:"ol"},"\u5207\u6362\u56de",(0,i.kt)("inlineCode",{parentName:"li"},"master"),"\uff0c\u5728\u5408\u5e76\u5bf9\u65b9\u5206\u652f\u3002")),(0,i.kt)("p",null,"\u5f53\u9879\u76ee\u4e2d\u5b58\u5728\u591a\u4e2a\u5206\u652f\uff0c\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u8fdb\u884c\u5408\u5e76\u53c8\u60f3\u4fdd\u8bc1",(0,i.kt)("inlineCode",{parentName:"p"},"git"),"\u8bb0\u5f55\u7b80\u7ea6\u660e\u4e86\u65f6\u53ef\u4ee5\u91c7\u7528\u8fd9\u79cd\u65b9\u6848\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mermaid"},"graph LR\n    A((A)) --\x3e B((B))\n    B --\x3e C((C))\n    \n    C --- master\n    \n    A --\x3e D((D))\n    D --\x3e E((E))\n    \n    E --- dev\n")),(0,i.kt)("p",null,"\u5f53\u8fdb\u884c",(0,i.kt)("inlineCode",{parentName:"p"},"rebase"),"\u5408\u5e76\u540e\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mermaid"},"graph LR\n    A((A)) --\x3e B((B))\n    B --\x3e C((C))\n    C --\x3e D((D'))\n    D --\x3e E((E'))\n    \n    E --- master\n    E --- dev\n")),(0,i.kt)("p",null,"\u4ee5\u4e0b\u9762\u4e3a\u4f8b\uff0c\u5b58\u5728\u4e24\u4e2a\u5206\u652f\uff0c\u4ed6\u4eec\u5404\u81ea\u90fd\u6709\u81ea\u5df1\u7684\u63d0\u4ea4\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"~/workspace/github/git-study(master \u2714) git log master dev --graph\n* commit 4914c5a1eca77f6fe3797f3f65c22e98a574f864 (HEAD -> master)\n| Author: AndyWang <wangyuanwenqi@outlook.com>\n| Date:   Tue Jun 8 13:23:53 2021 +0800\n|\n|     master add aa to a.txt\n|\n* commit 2969ea47fda0ca376df1b1e6e9238ad797a6ce1a\n| Author: AndyWang <wangyuanwenqi@outlook.com>\n| Date:   Tue Jun 8 11:29:59 2021 +0800\n|\n|     master add a to a.txt\n|\n| * commit 86322b31793c24cfb021857f8116c4fc80193e11 (dev)\n| | Author: AndyWang <wangyuanwenqi@outlook.com>\n| | Date:   Tue Jun 8 13:24:32 2021 +0800\n| |\n| |     dev add b to b.txt\n| |\n| * commit 1a31e22b6203957d91d3db0eb0181ab2215d8ff0\n|/  Author: AndyWang <wangyuanwenqi@outlook.com>\n|   Date:   Tue Jun 8 11:30:21 2021 +0800\n|\n|       dev add b.txt\n|\n* commit d54458266ca9cc99b1f020122ade3486c6e158ab\n  Author: AndyWang <wangyuanwenqi@outlook.com>\n  Date:   Tue Jun 8 10:33:00 2021 +0800\n\n      init a\n")),(0,i.kt)("p",null,"\u5207\u6362\u5230",(0,i.kt)("inlineCode",{parentName:"p"},"dev"),"\u5206\u652f\uff0c\u6267\u884c",(0,i.kt)("inlineCode",{parentName:"p"},"git rebase"),"\u64cd\u4f5c\u3002\u8fd9\u91cc\u8981\u5207\u6362\u5230",(0,i.kt)("inlineCode",{parentName:"p"},"dev"),"\u5206\u652f\u4e5f\u4f1a\u662f\u56e0\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"rebase"),"\u547d\u4ee4\u7684\u7279\u6027\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"rebase"),"\u7684\u542b\u4e49\u662f\u4ee5\u8c01\u4f5c\u4e3a\u57fa\u7840\u8fdb\u884c\u53d8\u57fa\uff0c\u5f53\u7136\u6211\u4eec\u8981\u4ee5",(0,i.kt)("inlineCode",{parentName:"p"},"master"),"\u4e3a\u57fa\u7840\uff0c\u6240\u4ee5\u8981\u5148\u5207\u5230",(0,i.kt)("inlineCode",{parentName:"p"},"dev\u2019"),"\u5206\u652f\u518d\u6267\u884c",(0,i.kt)("inlineCode",{parentName:"p"},"rebase"),"\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"~/workspace/github/git-study(dev \u2714) git rebase master\nFirst, rewinding head to replay your work on top of it...\nApplying: dev add b.txt\nApplying: dev add b to b.txt\n")),(0,i.kt)("p",null,"\u5207\u6362\u56de",(0,i.kt)("inlineCode",{parentName:"p"},"master"),"\u5206\u652f\uff0c\u6267\u884c",(0,i.kt)("inlineCode",{parentName:"p"},"git merge"),"\u64cd\u4f5c\u3002\u8fd9\u91cc\u9700\u8981\u518d\u6267\u884c\u4e00\u6b21",(0,i.kt)("inlineCode",{parentName:"p"},"merge"),"\u662f\u56e0\u4e3a\u521a\u624d\u7684\u53d8\u57fa\u53ea\u5b58\u5728\u4e8e",(0,i.kt)("inlineCode",{parentName:"p"},"dev"),"\u5206\u652f\u4e0a\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"master"),"\u4e0a\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"commit"),"\u8fd8\u6ca1\u6709\u53d8\u5316\uff0c\u9700\u8981\u5c06\u521a\u624d\u7684\u53d8\u57fa\u7ed3\u679c\u5408\u5e76\u8fc7\u6765\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"~/workspace/github/git-study(master \u2714) git merge dev\nUpdating 4914c5a..5f757aa\nFast-forward\n b.txt | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 b.txt\n")),(0,i.kt)("p",null,"\u67e5\u770b",(0,i.kt)("inlineCode",{parentName:"p"},"git log"),"\u8bb0\u5f55\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"~/workspace/github/git-study(master \u2714) git log master dev --graph\n* commit 5f757aa912b1d4df71ac79bed1bbebea063f1524 (HEAD -> master, dev)\n| Author: AndyWang <wangyuanwenqi@outlook.com>\n| Date:   Tue Jun 8 13:24:32 2021 +0800\n|\n|     dev add b to b.txt\n|\n* commit a57762f4b6dc96ccc8e0223f1e66696e6acd0784\n| Author: AndyWang <wangyuanwenqi@outlook.com>\n| Date:   Tue Jun 8 11:30:21 2021 +0800\n|\n|     dev add b.txt\n|\n* commit 4914c5a1eca77f6fe3797f3f65c22e98a574f864\n| Author: AndyWang <wangyuanwenqi@outlook.com>\n| Date:   Tue Jun 8 13:23:53 2021 +0800\n|\n|     master add aa to a.txt\n|\n* commit 2969ea47fda0ca376df1b1e6e9238ad797a6ce1a\n| Author: AndyWang <wangyuanwenqi@outlook.com>\n| Date:   Tue Jun 8 11:29:59 2021 +0800\n|\n|     master add a to a.txt\n|\n* commit d54458266ca9cc99b1f020122ade3486c6e158ab\n  Author: AndyWang <wangyuanwenqi@outlook.com>\n  Date:   Tue Jun 8 10:33:00 2021 +0800\n\n      init a\n")),(0,i.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"dev"),"\u5206\u652f\u4e0a\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"commit"),"\u90fd\u5df2\u7ecf\u884d\u5408\u5230",(0,i.kt)("inlineCode",{parentName:"p"},"master"),"\u5206\u652f\u4e0a\u4e86\uff0c\u4e14\u4ed6\u4eec\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"git"),"\u8bb0\u5f55\u662f\u4e00\u6761\u7ebf\uff0c\u800c\u4e0d\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"merge"),"\u4e4b\u540e\u7684\u4e24\u6761\u3002"),(0,i.kt)("h3",{id:"23-\u5220\u9664\u6307\u5b9acommit"},"2.3 \u5220\u9664\u6307\u5b9a",(0,i.kt)("inlineCode",{parentName:"h3"},"commit")),(0,i.kt)("p",null,"\u5f53\u8981\u5220\u9664\u67d0\u4e2a\u5206\u652f\u4e2d\u95f4\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"commit"),"\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"rebase"),"\u547d\u4ee4\u3002"),(0,i.kt)("p",null,"\u547d\u4ee4\u6a21\u5f0f\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"git rebase -i [startcommit] [endcommit]"),"\uff1a\u5176\u4e2d",(0,i.kt)("inlineCode",{parentName:"li"},"-i"),"\u4e3a\u6253\u5f00\u4ea4\u4e92\u9762\uff0c",(0,i.kt)("inlineCode",{parentName:"li"},"[startcommit]"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"[endcommit]"),"\u4e3a\u533a\u95f4\u9009\u62e9\uff0c\u5176\u4e2d",(0,i.kt)("inlineCode",{parentName:"li"},"[endcommit]"),"\u53ef\u4ee5\u7701\u7565\uff1b"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"git rebase -i HEAD~4"),"\uff1a\u5904\u7406\u6700\u8fd1\u4e24\u4e2a",(0,i.kt)("inlineCode",{parentName:"li"},"commit"),"\u3002")),(0,i.kt)("p",null,"\u6574\u4f53\u601d\u60f3\u662f\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"li"},"git rebase"),"\u547d\u4ee4\u5904\u7406\u6700\u8fd1\u7684",(0,i.kt)("inlineCode",{parentName:"li"},"N"),"\u6761",(0,i.kt)("inlineCode",{parentName:"li"},"commit"),"\uff1b"),(0,i.kt)("li",{parentName:"ol"},"\u8fdb\u5165",(0,i.kt)("inlineCode",{parentName:"li"},"vim"),"\u7f16\u8f91\u5668\u540e\u9488\u5bf9\u9700\u8981\u5220\u9664\u7684",(0,i.kt)("inlineCode",{parentName:"li"},"commit"),"\uff0c\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"li"},"drop"),"\u547d\u4ee4\u5c06\u5176\u5220\u9664\uff1b"),(0,i.kt)("li",{parentName:"ol"},"\u4fdd\u5b58\u9000\u51fa\u6267\u884c\u5373\u53ef")),(0,i.kt)("p",null,"\u4f8b\u5982\uff1a"),(0,i.kt)("p",null,"\u4ee5\u4e0b\u9762",(0,i.kt)("inlineCode",{parentName:"p"},"git"),"\u63d0\u4ea4\u8bb0\u5f55\u4e3a\u4f8b\uff0c\u5220\u9664\u4e2d\u95f4\u7684\u4e24\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"master"),"\u5b57\u6837\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"commit"),"\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"~/workspace/github/git-study(master \u2714) git log\ncommit 5f757aa912b1d4df71ac79bed1bbebea063f1524 (HEAD -> master, dev)\nAuthor: AndyWang <wangyuanwenqi@outlook.com>\nDate:   Tue Jun 8 13:24:32 2021 +0800\n\n    dev add b to b.txt\n\ncommit a57762f4b6dc96ccc8e0223f1e66696e6acd0784\nAuthor: AndyWang <wangyuanwenqi@outlook.com>\nDate:   Tue Jun 8 11:30:21 2021 +0800\n\n    dev add b.txt\n\ncommit 4914c5a1eca77f6fe3797f3f65c22e98a574f864\nAuthor: AndyWang <wangyuanwenqi@outlook.com>\nDate:   Tue Jun 8 13:23:53 2021 +0800\n\n    master add aa to a.txt\n\ncommit 2969ea47fda0ca376df1b1e6e9238ad797a6ce1a\nAuthor: AndyWang <wangyuanwenqi@outlook.com>\nDate:   Tue Jun 8 11:29:59 2021 +0800\n\n    master add a to a.txt\n\ncommit d54458266ca9cc99b1f020122ade3486c6e158ab\nAuthor: AndyWang <wangyuanwenqi@outlook.com>\nDate:   Tue Jun 8 10:33:00 2021 +0800\n\n    init a\n")),(0,i.kt)("p",null,"\u6267\u884c",(0,i.kt)("inlineCode",{parentName:"p"},"git rebase"),"\u547d\u4ee4\uff0c\u8c03\u8d77",(0,i.kt)("inlineCode",{parentName:"p"},"vim"),"\u7f16\u8f91\u6846\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"~/workspace/github/git-study(master \u2714) git rebase -i HEAD~4\n    1 drop 2969ea4 master add a to a.txt\n  2 drop 4914c5a master add aa to a.txt\n  3 pick a57762f dev add b.txt\n  4 pick 5f757aa dev add b to b.txt\n  5\n  6 # Rebase d544582..5f757aa onto 5f757aa (4 commands)\n  7 #\n  8 # Commands:\n  9 # p, pick <commit> = use commit\n 10 # r, reword <commit> = use commit, but edit the commit message\n 11 # e, edit <commit> = use commit, but stop for amending\n 12 # s, squash <commit> = use commit, but meld into previous commit\n 13 # f, fixup <commit> = like \"squash\", but discard this commit's log message\n 14 # x, exec <command> = run command (the rest of the line) using shell\n 15 # b, break = stop here (continue rebase later with 'git rebase --continue')\n 16 # d, drop <commit> = remove commit\n 17 # l, label <label> = label current HEAD with a name\n 18 # t, reset <label> = reset HEAD to a label\n 19 # m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]\n 20 # .       create a merge commit using the original merge commit's\n 21 # .       message (or the oneline, if no original merge commit was\n 22 # .       specified). Use -c <commit> to reword the commit message.\n 23 #\n 24 # These lines can be re-ordered; they are executed from top to bottom.\n 25 #\n 26 # If you remove a line here THAT COMMIT WILL BE LOST.\n 27 #\n 28 # However, if you remove everything, the rebase will be aborted.\n 29 #\n 30 # Note that empty commits are commented out\n")),(0,i.kt)("p",null,"\u5c06\u4e24\u4e2a\u6709",(0,i.kt)("inlineCode",{parentName:"p"},"master"),"\u5b57\u6837\u7684\u63d0\u4ea4\u8bb0\u5f55\u6807\u8bb0\u4e3a\u547d\u4ee4",(0,i.kt)("inlineCode",{parentName:"p"},"drop"),"\uff0c\u4fdd\u5b58\u9000\u51fa\u6267\u884c\uff0c\u67e5\u770b\u5220\u9664\u4e4b\u540e\u7684\u8bb0\u5f55\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"~/workspace/github/git-study(master \u2714) git log\ncommit 74fdbf785410310f220f6c2f34afaef6a30e1387 (HEAD -> master)\nAuthor: AndyWang <wangyuanwenqi@outlook.com>\nDate:   Tue Jun 8 13:24:32 2021 +0800\n\n    dev add b to b.txt\n\ncommit 0ff05c564ef803361804b6d3655328665c062aec\nAuthor: AndyWang <wangyuanwenqi@outlook.com>\nDate:   Tue Jun 8 11:30:21 2021 +0800\n\n    dev add b.txt\n\ncommit d54458266ca9cc99b1f020122ade3486c6e158ab\nAuthor: AndyWang <wangyuanwenqi@outlook.com>\nDate:   Tue Jun 8 10:33:00 2021 +0800\n\n    init a\n")),(0,i.kt)("p",null,"\u53ef\u4ee5\u770b\u5b8c\uff0c\u5df2\u7ecf\u5b8c\u7f8e\u5220\u4e86\u4e86\u4e2d\u95f4\u7684\u4e24\u6761\u5386\u53f2\u8bb0\u5f55\u3002"),(0,i.kt)("h3",{id:"24---interactive---i"},"2.4 ",(0,i.kt)("inlineCode",{parentName:"h3"},"--interactive && -i")),(0,i.kt)("p",null,"\u4ee5\u4ea4\u4e92\u65b9\u5f0f\u8fdb\u884c",(0,i.kt)("inlineCode",{parentName:"p"},"rebase")))}p.isMDXComponent=!0}}]);